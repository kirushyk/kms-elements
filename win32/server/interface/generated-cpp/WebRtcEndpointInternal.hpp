/* Autogenerated with kurento-module-creator */

#ifndef __WEB_RTC_ENDPOINT_INTERNAL_HPP__
#define __WEB_RTC_ENDPOINT_INTERNAL_HPP__

#include "WebRtcEndpoint.hpp"

namespace kurento
{
class JsonSerializer;
}

namespace kurento
{
class MediaPipeline;
class IceCandidate;
class IceCandidatePair;
} /* kurento */

namespace kurento
{

class WebRtcEndpointMethodGatherCandidates
{
public:
  WebRtcEndpointMethodGatherCandidates() {}
  ~WebRtcEndpointMethodGatherCandidates() {}

  void invoke (std::shared_ptr<WebRtcEndpoint> obj);
  void Serialize (JsonSerializer &serializer);

};

class WebRtcEndpointMethodAddIceCandidate
{
public:
  WebRtcEndpointMethodAddIceCandidate() {}
  ~WebRtcEndpointMethodAddIceCandidate() {}

  void invoke (std::shared_ptr<WebRtcEndpoint> obj);
  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<IceCandidate> getCandidate () {
    return candidate;
  }

  void setCandidate (std::shared_ptr<IceCandidate> candidate) {
    this->candidate = candidate;
  }

private:
  std::shared_ptr<IceCandidate> candidate;
};

class WebRtcEndpointMethodCreateDataChannel
{
public:
  WebRtcEndpointMethodCreateDataChannel() {}
  ~WebRtcEndpointMethodCreateDataChannel() {}

  void invoke (std::shared_ptr<WebRtcEndpoint> obj);
  void Serialize (JsonSerializer &serializer);

  std::string getLabel () {
    return label;
  }

  void setLabel (const std::string &label) {
    this->label = label;
    __isSetLabel = true;
  }

  bool getOrdered () {
    return ordered;
  }

  void setOrdered (bool ordered) {
    this->ordered = ordered;
    __isSetOrdered = true;
  }

  int getMaxPacketLifeTime () {
    return maxPacketLifeTime;
  }

  void setMaxPacketLifeTime (int maxPacketLifeTime) {
    this->maxPacketLifeTime = maxPacketLifeTime;
    __isSetMaxPacketLifeTime = true;
  }

  int getMaxRetransmits () {
    return maxRetransmits;
  }

  void setMaxRetransmits (int maxRetransmits) {
    this->maxRetransmits = maxRetransmits;
    __isSetMaxRetransmits = true;
  }

  std::string getProtocol () {
    return protocol;
  }

  void setProtocol (const std::string &protocol) {
    this->protocol = protocol;
    __isSetProtocol = true;
  }

private:
  std::string label;
  bool __isSetLabel = false;
  bool ordered;
  bool __isSetOrdered = false;
  int maxPacketLifeTime;
  bool __isSetMaxPacketLifeTime = false;
  int maxRetransmits;
  bool __isSetMaxRetransmits = false;
  std::string protocol;
  bool __isSetProtocol = false;
};

class WebRtcEndpointMethodCloseDataChannel
{
public:
  WebRtcEndpointMethodCloseDataChannel() {}
  ~WebRtcEndpointMethodCloseDataChannel() {}

  void invoke (std::shared_ptr<WebRtcEndpoint> obj);
  void Serialize (JsonSerializer &serializer);

  int getChannelId () {
    return channelId;
  }

  void setChannelId (int channelId) {
    this->channelId = channelId;
  }

private:
  int channelId;
};

class WebRtcEndpointConstructor
{
public:
  WebRtcEndpointConstructor () {}
  ~WebRtcEndpointConstructor () {}

  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<MediaPipeline> getMediaPipeline ();

  void setMediaPipeline (std::shared_ptr<MediaPipeline> mediaPipeline) {
    this->mediaPipeline = mediaPipeline;
  }

  bool getUseDataChannels ();

  void setUseDataChannels (bool useDataChannels) {
    this->useDataChannels = useDataChannels;
    __isSetUseDataChannels = true;
    __isSetDefaultUseDataChannels = false;
  }

private:
  std::shared_ptr<MediaPipeline> mediaPipeline;
  bool useDataChannels;
  bool __isSetUseDataChannels = false;
  bool __isSetDefaultUseDataChannels = false;
};

} /* kurento */

#endif /*  __WEB_RTC_ENDPOINT_INTERNAL_HPP__ */
