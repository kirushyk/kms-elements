/* Autogenerated with kurento-module-creator */

#ifndef __PLAYER_ENDPOINT_INTERNAL_HPP__
#define __PLAYER_ENDPOINT_INTERNAL_HPP__

#include "PlayerEndpoint.hpp"

namespace kurento
{
class JsonSerializer;
}

namespace kurento
{
class MediaPipeline;
class VideoInfo;
} /* kurento */

namespace kurento
{

class PlayerEndpointMethodPlay
{
public:
  PlayerEndpointMethodPlay() {}
  ~PlayerEndpointMethodPlay() {}

  void invoke (std::shared_ptr<PlayerEndpoint> obj);
  void Serialize (JsonSerializer &serializer);

};

class PlayerEndpointConstructor
{
public:
  PlayerEndpointConstructor () {}
  ~PlayerEndpointConstructor () {}

  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<MediaPipeline> getMediaPipeline ();

  void setMediaPipeline (std::shared_ptr<MediaPipeline> mediaPipeline) {
    this->mediaPipeline = mediaPipeline;
  }

  std::string getUri ();

  void setUri (const std::string &uri) {
    this->uri = uri;
  }

  bool getUseEncodedMedia ();

  void setUseEncodedMedia (bool useEncodedMedia) {
    this->useEncodedMedia = useEncodedMedia;
    __isSetUseEncodedMedia = true;
    __isSetDefaultUseEncodedMedia = false;
  }

private:
  std::shared_ptr<MediaPipeline> mediaPipeline;
  std::string uri;
  bool useEncodedMedia;
  bool __isSetUseEncodedMedia = false;
  bool __isSetDefaultUseEncodedMedia = false;
};

} /* kurento */

#endif /*  __PLAYER_ENDPOINT_INTERNAL_HPP__ */
